/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'

const ReceitasLazyRouteImport = createFileRoute('/receitas')()
const PedidosLazyRouteImport = createFileRoute('/pedidos')()
const EstoqueLazyRouteImport = createFileRoute('/estoque')()
const IndexLazyRouteImport = createFileRoute('/')()

const ReceitasLazyRoute = ReceitasLazyRouteImport.update({
  id: '/receitas',
  path: '/receitas',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/receitas.lazy').then((d) => d.Route))
const PedidosLazyRoute = PedidosLazyRouteImport.update({
  id: '/pedidos',
  path: '/pedidos',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/pedidos.lazy').then((d) => d.Route))
const EstoqueLazyRoute = EstoqueLazyRouteImport.update({
  id: '/estoque',
  path: '/estoque',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/estoque.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/estoque': typeof EstoqueLazyRoute
  '/pedidos': typeof PedidosLazyRoute
  '/receitas': typeof ReceitasLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/estoque': typeof EstoqueLazyRoute
  '/pedidos': typeof PedidosLazyRoute
  '/receitas': typeof ReceitasLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/estoque': typeof EstoqueLazyRoute
  '/pedidos': typeof PedidosLazyRoute
  '/receitas': typeof ReceitasLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/estoque' | '/pedidos' | '/receitas'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/estoque' | '/pedidos' | '/receitas'
  id: '__root__' | '/' | '/estoque' | '/pedidos' | '/receitas'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  EstoqueLazyRoute: typeof EstoqueLazyRoute
  PedidosLazyRoute: typeof PedidosLazyRoute
  ReceitasLazyRoute: typeof ReceitasLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/receitas': {
      id: '/receitas'
      path: '/receitas'
      fullPath: '/receitas'
      preLoaderRoute: typeof ReceitasLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pedidos': {
      id: '/pedidos'
      path: '/pedidos'
      fullPath: '/pedidos'
      preLoaderRoute: typeof PedidosLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/estoque': {
      id: '/estoque'
      path: '/estoque'
      fullPath: '/estoque'
      preLoaderRoute: typeof EstoqueLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  EstoqueLazyRoute: EstoqueLazyRoute,
  PedidosLazyRoute: PedidosLazyRoute,
  ReceitasLazyRoute: ReceitasLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
